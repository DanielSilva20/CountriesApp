//
//  HomeInteractor.swift
//  CountriesApp
//
//  Created by Daniel Silva on 28/03/2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic {
    func searchCountry(request: Home.Search.Request)
    func getAllCountries()
}

protocol HomeDataStore {
    var selectedCountry: Country? { get set }
    var allCountries: [CountryCurrency]? { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore {
    var presenter: HomePresentationLogic?
    var worker: HomeWorker?
    var selectedCountry: Country?
    var allCountries: [CountryCurrency]?

    func searchCountry(request: Home.Search.Request) {
        worker = HomeWorker()
        worker?.fetchCountryInfo(countryName: request.countryName) { [weak self] result in
            switch result {
            case .success(let country):
                let response = Home.Search.Response(result: .success(country))
                self?.presenter?.presentCountrySearchResult(response: response)
                self?.selectedCountry = country
            case .failure(let error):
                self?.presenter?.presentError(error: error)
            }
        }
    }

    func getAllCountries() {
        worker = HomeWorker()
        worker?.fetchAllCountries(completion: { [weak self] result in
            switch result {
            case .success(let countries):
                let response = Home.Countries.Response(result: .success(countries))
                self?.presenter?.presentAllCountriesResult(response: response)
                self?.allCountries = countries
            case .failure(let error):
                self?.presenter?.presentError(error: error)
            }
        })
    }
}
