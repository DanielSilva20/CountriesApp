//
//  HomeViewController.swift
//  CountriesApp
//
//  Created by Daniel Silva on 28/03/2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeDisplayLogic: AnyObject {
    func displayCountrySearchResult(viewModel: Home.Search.ViewModel)
}

class HomeViewController: UIViewController, HomeDisplayLogic {
    var interactor: HomeBusinessLogic?
    var router: (NSObjectProtocol & HomeRoutingLogic & HomeDataPassing)?
    private var searchTextField: UITextField!
    private var submitButton: UIButton!
    private var verticalStackView: UIStackView!

    private var countryCode: UILabel!
    private var countryLanguage: UILabel!
    private var countryCurrency: UILabel!

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
        createViews()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
        fatalError()
    }

    func createViews() {
        setUpViews()
        addViewsToSuperview()
        setUpConstraints()
    }

    private func setUpViews() {
        verticalStackView = UIStackView()
        verticalStackView.axis = .vertical
        verticalStackView.alignment = .center
        verticalStackView.distribution = .fill
        verticalStackView.spacing = 8.0

        searchTextField = UITextField()
        searchTextField.borderStyle = .roundedRect
        searchTextField.placeholder = "Enter a country name"
        searchTextField.translatesAutoresizingMaskIntoConstraints = false
        verticalStackView.addArrangedSubview(searchTextField)

        submitButton = UIButton()
        submitButton.setTitle("Submit", for: .normal)
        submitButton.setTitleColor(.blue, for: .normal)
        submitButton.addTarget(self, action: #selector(submitButtonTapped), for: .touchUpInside)
        submitButton.translatesAutoresizingMaskIntoConstraints = false
        verticalStackView.addArrangedSubview(submitButton)

        countryCode = UILabel()
        countryCurrency = UILabel()
        countryLanguage = UILabel()

        verticalStackView.addArrangedSubview(countryCode)
        verticalStackView.addArrangedSubview(countryCurrency)
        verticalStackView.addArrangedSubview(countryLanguage)

    }

    private func addViewsToSuperview() {
        view.addSubview(verticalStackView)
    }

    private func setUpConstraints() {
        verticalStackView.translatesAutoresizingMaskIntoConstraints = false
        NSLayoutConstraint.activate([
            verticalStackView.centerYAnchor.constraint(equalTo: view.centerYAnchor),
            verticalStackView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            verticalStackView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20)
        ])
    }

    private func setup() {
        let viewController = self
        let interactor = HomeInteractor()
        let presenter = HomePresenter()
        let router = HomeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .white
    }

    // MARK: Do something

    func displayCountrySearchResult(viewModel: Home.Search.ViewModel) {
        if !viewModel.isError {
            DispatchQueue.main.async { [weak self] in
                self?.countryCode.text = viewModel.countryCode
                self?.countryCurrency.text = viewModel.currency
                self?.countryLanguage.text = viewModel.language
                self?.searchTextField.text = ""
            }
//            DispatchQueue.main.async { [weak self] in
//                self?.router?.routeToCountryDetail()
//                self?.searchTextField.text = ""
//            }
        } else {
            DispatchQueue.main.async { [weak self] in
                let alert = UIAlertController(title: "Error", message: viewModel.errorMessage, preferredStyle: .alert)
                let okAction = UIAlertAction(title: "OK", style: .default, handler: nil)
                alert.addAction(okAction)
                self?.present(alert, animated: true, completion: nil)
                self?.searchTextField.text = ""
            }
        }
    }

    @objc private func submitButtonTapped() {
        guard let searchText = searchTextField.text else {
            return
        }
        print("I will search the information about", searchText)
        let request = Home.Search.Request(countryName: searchText)
        interactor?.searchCountry(request: request)
    }
}
